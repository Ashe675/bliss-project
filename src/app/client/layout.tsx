// app/layout.tsx
'use client'
import type { Metadata } from "next";

//import "./globals.css";
import { robotoFont } from "@/config/fonts/fonts";

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
//   icons : ['/ui/logo-principal.webp']
// };


import NavBar from "@/components/ui/navigation/NavBar";
import DropdownMenu from "@/components/ui/navigation/DropdownMenu";
import Logo from "@/components/client/logos/Logo";
import MenuButton from "@/components/ui/buttons/MenuButton";
import { useEffect, useRef, useState } from "react";


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const menuRef = useRef<HTMLDivElement>(null);

  const toggleMenu = () => {
    setIsMenuOpen(!isMenuOpen);
  };

  useEffect(() => {
    const handleClickOutside = (event: MouseEvent | TouchEvent) => {
      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {
        setIsMenuOpen(false);
      }
    };

    if (isMenuOpen) {
      document.addEventListener('mouseover', handleClickOutside);
      document.addEventListener('touchcancel', handleClickOutside);
    }

    return () => {
      document.removeEventListener('mouseover', handleClickOutside);
      document.removeEventListener('touchcancel', handleClickOutside);
    };
  }, [isMenuOpen]);

  return (
    <html lang="en">
      <body className={`antialiased min-h-screen relative`}>
        {/* Div para el fondo fijo */}
        <div className="fixed h-full  inset-0 bg-gradient-to-b from-[#180A00] to-[#000000] z-[-1] " />
        {/* Contenido de la página */}
        <div className="fixed top-0 left-0 right-0 z-50">
        {/* Logo en posición fija */}
        <div className="absolute left-4 top-4 z-50">
          <Logo src="/ui/logo.png" alt="App Logo" width={90} height={90} />
        </div>


        {/* Botón de menú en posición fija */}
        <div className="absolute right-4 top-4 z-[4000]">
          <MenuButton onClick={toggleMenu} />
        </div>
      </div>
        <div className="relative z-10">
          {children}
        </div>
        <DropdownMenu isOpen={isMenuOpen} toggleMenu={toggleMenu} menuRef={menuRef} />
        <NavBar />
        
      </body>
    </html>
  );
}
